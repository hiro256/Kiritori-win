<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>